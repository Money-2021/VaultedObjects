The ITS Proof,for Medly-KMS,is based upon imformation theory:

1. P(M = mIC = c) = P(M = m) i.e. seeing a ciphertext doesn't give you any extra information about the plaintext. The probability of seeing a message m after the ciphertext has been observed is the same as the probability of the message without the ciphertext.
2. P(C = cIM = mo) = P(C = cIM = mt ) i.e. the probability of ciphertext c is equally likely for 2 different messages. 
3. The key is as long as the message and a key should be used uniquely with a probability 1/IKI where IKI is the key space. 
Pr[M=m;C=c]=Pr[M=m] 

The knowledge of the Cyphertext is not helpful at all!
The result is independent of the capability of any attacker or computational resources.
The Vernam Cipher as implemented above is provably secure against all attacks.

The above proof requres a "cryptographically secure" bit stream (CSRBG) as the proof only works at the bit level, in order to implement a truly secure one-time pad. The Medley Key Generator(KG) is one such example of a secure CSRBG. 
It should be noted that a CSRBG cannot be computed soley from a TRNG seed, as this would produce a CSPRNG key, which would not meet the requireemnbst of the above proof.

Malleability and active attack vectors
Yet another issue has to be considered, namely the message authentication, which is not usually implemented in Vernam Ciphers.
Malleability is common to all stream ciphers (Hanaoka, 2008). Also, the XOR operator is vulnerable to a known-plaintext attack, since XOR (plaintext, ciphertext) = key.
Active attackers can also modify messages in transit, a weakness shared with all stream ciphers.
The Medly solution adds proprietary athentication to each key to addresses these well known issues.

Lastley Keys
Kerckhoffs's principle, holds that a cryptosystem should be secure, even if everything about the system, except the key, is public knowledge. 
Thus, cryptographic keys should generally be generated secretly and uniformly at random in the cryptosystem's key domain (universals); that is in the set of valid keys for the cryptosystem. What makes a key valid depends on the cryptosystem and often parameters (typically including key size).
Since the adversary may know how our system works (Kerckhoffs's principle), we need to find a way to generate keys that don't only depend on a deterministic computation (which the adversary could reproduce). Therefore, all keys must depend on something that the adversary does not know. Such a thing is called a “true” random value.
The proprietary KMS-Medley Key generator (KG) takes a QRNG (TRNG) seed and produces a secure cryptographic normalised secure key, with a uniform distribution, meaning each bit in the key sequence is equally likely to occur. 
Medley is based upon a proprietry KG, whcih generates a key stream upon demand, the KG TRNG seed is never stored, and has a secure ephemerial (one time) existance.
Medley supports user defined KG-universals to enable the creation of arbitary key domains to suit a wide range of operational deployments of an ITS-KMS.

Conclusion 
The Medley ITS-KMS creats a pairwise, infinate length, identical secure key stream (all bits of the key have equal propablity) between two secure Identoity end points according to this proof.

Notes
1. The Medly is a cooperative key generation scheme, the Key Generation Cipher is provably immune from all forms of attack vectors, as the keys are secure. 
2. Medley cipher is essential the XOR (vernam cipher) of two TRNG key streams.
3. Quantium Key Distribution (QKD) self deprecates as  within QKD, both participating parties need a) the physical devices, b) a connection between those that allows to run QKD, and 
c) still some authentication method which either requires a shared secret or some complexity-theoretically secure signature scheme. In short in QKD the two parties have to know each other 
before communicating and pre-stage shared data first. This defeats the purpose of QKD itself.


