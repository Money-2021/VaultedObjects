Once the secrets of the algorithm’s implementation are discovered (as they often are), systems using these algorithms become vulnerable to attack. 
That’s why, according to Kerckhoffs’s Principle, the only secret element of an encryption algorithm should be the key itself.
The objectiuve of the Vaulted Object KMS is to provide as close to zero attack surface as techncially and practiclaly possible today, while acknowledging that a zero risk system is impossible, and hence some degree of residual risk must always exist.
The foundation of all Key Generation is a hardware based random source of enthropy (TRNG), vaulted objects make use of a "Quantum Random Number" souce of entropy, and then generates secure crytographic keys.

Encryption keys are a fundamental component of the security of cryptographic systems.In order to properly protect your encryption key, you’ll need a Information Thretic Secure, key management system(KMS).
Key generation is the process of generating secure crypyogrphic keys in cryptography. A key is used to encrypt and decrypt Vaulted Objects, but are never stored. A device or program used to generate keys is called a key generator or KG.

The security of the Valuted Object KMS, code named Medley, is foundational to the security of the Vaulted Object framework.

THE FRAMEWORK
The valuted object KMS is a proprietry system protected as a Trade Secret, contained within a hardware protected trust zone.
The solution is quantium safe as a brute force attack on the KMS would thereticlaly take an infinate number of years and resources. For reference, the universe is currently about 1.38×10^10 years old.

KMS Principles

1. A cryptosystem should be secure, even if everything about the system, except the key, is public knowledge. This concept is widely embraced by cryptographers, in contrast to security through obscurity, which is not.
2. There exists no form of key storage within any element of the KMS. All keys are generated on demand using a secure key Generator, with at least 40 years of operational experience with no publicly known vulnerablities.
3. All KG seed or keying material travels within a trusted path, and is protected to the same level as any generated key material.
4. Within the KMS key material is never stored (ever) and always moves external to any key usage channel.
5. There exist no centralised key storage of management system, all keys are generated or regenerated via decentralised KG process.
6. All generated keys have a security policy which requires single usage or at most has an ephemeral existence for the duration of a the vaulting funtion (milliseconds).
7. All KG's domains are segregated via the use of domain specific universals, there exist no interoperability between KMS domains or KG's.
8. There exist no public key based algorithms used within the KMS, hence deriving private leys from public keys must not be an attack vector for any KMS.
9. All key material is derived from a Quantum Random Numbers source, and no key is ever reused.
10. There exist no HSM elements within the framework as they are not required to store or process keys.
 
The author(s) certifies, that to the best of their knowledge, this GitHub site contains publicly available, unclassified information only, protected via the 1st and 5th Amendment.

Notes
1. AES, all Public Ket and all Post quantium algorithm are NOT ITS ciphers and hence cannto be proven secure.
2. The history and usage of KG's is derived from the theorically secure One-Time-Pad. The first mass deployed Key Generator was the KG-84  developed in 1983 and was first introduced in early 1984.
The keying of each KG was a manual process via a secure KYK-13 device.
3. The Key Generator algorithm is a proprietry TRADE SECRET, like all of the previously known KGs.
4. The related source code is generally considered to be protected by the First Amendment as a form of speech. 
